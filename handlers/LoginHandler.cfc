component name="LoginHandler" extends="coldbox.system.EventHandler" {	// ORM injection	property name="UserService" inject="entityService:User";		// inject User entity with handy getters/setters		/*************************************************************/	public void function Login(any Event) {		var rc = Event.getCollection();		//writedump(rc);		//abort;		//Set xeh's (extended event handlers)		rc.xehLogin = "LoginHandler.doLogin";				//Set the page's title		Event.setView("Login/vwLogin");	}		/*************************************************************/	public void function doLogin(event, rc, prc) {				//writedump("Do Login"); abort;		//Do Login Procedure.		var objDataStore = "";		//var rc = Event.getCollection();		//writedump(rc); writedump(prc); abort;				//Error checking: does the form variables username & password exist in the request collection? if they do, are they blank?		if( not Event.valueExists("email") or not Event.valueExists("password") ){			//Form is not valid, set a message to display			getPlugin("MessageBox").setMessage("error","No username or password defined.");			//getPlugin("Logger").logEntry("error","Login without variables set detected.");						//Redirect to next event, you can also add extra parameters to the URL			setNextEvent("LoginHandler.Login", "email=#Event.getValue("email","")#");		}		else{			// form is valid, get user info from DB			var user = UserService.findWhere(criteria={    			email = rc.Email,    			password = rc.Password			});						// Did user pass validation?
			if (isDefined("user")) {				// we have a valid user				//writedump(user); abort;								// set session vars				getPlugin("SessionStorage").setVar("LoggedIn", true);				getPlugin("SessionStorage").setVar("Name", user.getNickname());				getPlugin("SessionStorage").setVar("UserID", user.getUserID());				getPlugin("SessionStorage").setVar("Avatar", user.getAvatar());								//Log the entry				//getPlugin("Logger").logEntry("information","The user #validationStruct.qUser.name# has now logged in.");								//relocate to home page.				setNextEvent("FizHandler.PostList");	// add xehHome to querystring			}			else{				// user did NOT validate				// writedump("NOT a Valid User"); abort;								//Set a message to display				getPlugin("MessageBox").setMessage("error","Invalid Logon Information. Please try again");				//getPlugin("Logger").logEntry("warning","Invalid logon information detected. IP used: #cgi.remote_addr#");								//Redirect to next event, you can also add extra parameters to the URL				setNextEvent("LoginHandler.Login","username=#Event.getValue("username","")#");			}		}	}	/*************************************************************/	public void function Home(any Event) {			//Set the page's title			Event.setValue("title", "Sample Login App: Welcome Back");			/*				The view "general/home" will be used by convention for this event				because of the handler name "general" and the event name "home".				Alternatly, you can manually set the view using				Event.setView("general/home");			*/	}	/*************************************************************/	public void function doLogout(any Event) {			//Delete login Information			getPlugin("SessionStorage").clearAll();			//Set the next event to display			setNextEvent("LoginHandler.Login");	}}